# This file was *autogenerated* from the file taperedStiffness.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_3 = Integer(Integer(3)); _sage_const_2 = Integer(Integer(2)); _sage_const_1 = Integer(Integer(1)); _sage_const_0 = Integer(Integer(0)); _sage_const_7 = Integer(Integer(7)); _sage_const_6 = Integer(Integer(6)); _sage_const_5 = Integer(Integer(5)); _sage_const_4 = Integer(Integer(4)); _sage_const_9 = Integer(Integer(9)); _sage_const_8 = Integer(Integer(8)); _sage_const_119 = Integer(Integer(119)); _sage_const_132 = Integer(Integer(132)); _sage_const_116 = Integer(Integer(116)); _sage_const_13 = Integer(Integer(13)); _sage_const_12 = Integer(Integer(12)); _sage_const_11 = Integer(Integer(11)); _sage_const_10 = Integer(Integer(10)); _sage_const_15 = Integer(Integer(15)); _sage_const_14 = Integer(Integer(14)); _sage_const_122 = Integer(Integer(122)); _sage_const_99 = Integer(Integer(99)); _sage_const_126 = Integer(Integer(126)); _sage_const_127 = Integer(Integer(127)); _sage_const_100 = Integer(Integer(100)); _sage_const_92 = Integer(Integer(92)); _sage_const_102 = Integer(Integer(102)); _sage_const_104 = Integer(Integer(104)); _sage_const_95 = Integer(Integer(95)); _sage_const_107 = Integer(Integer(107)); _sage_const_140 = Integer(Integer(140)); _sage_const_142 = Integer(Integer(142)); _sage_const_128 = Integer(Integer(128))
import sagetex
sagetex.openout('taperedStiffness')
sagetex.blockbegin()
try:
 var('b b1 b2 d x L gamma alpha')  # dimensions of beam
 var('I')             # moment of inertia
 var('E') # young's modulus
 var('q') # load
 var('c1 c2 c3') # constants of integration
 var('cc1 cc2 cc3') # solved constants of integration
 var('cond1 cond2 cond3') # equations for constants
 var('m')
 bx = alpha*(x+gamma) # thickness as function of x with alpha and gamma
 I = b*d**_sage_const_3 /_sage_const_12
 Ix = I.substitute(d = alpha*(x+gamma))
 f2 = (integral(-q,x)+c1)/E/Ix
 f1 = integral(f2,x) + c2
 f = integral(f1,x) + c3
 f = f.simplify_full()
 cond1 = solve(f2.substitute(x=L),c1)
 cond2 = solve(f1.substitute(x=_sage_const_0 ),c2)
 cond3 = solve(f.substitute(x=_sage_const_0 ),c3)
 cc1=cond1[_sage_const_0 ].rhs() # get value from solution
 cc2=cond2[_sage_const_0 ].rhs()
 cc3=cond3[_sage_const_0 ].rhs()
 f = f.substitute(c3=cc3)
 f = f.substitute(c2=cc2)
 f = f.substitute(c1=cc1)
 #f = f.simplify_log()
 f = f.simplify_rational()
 f = f.factor()

 #f = f.substitute(gamma = 3*L)
 fdisp = f.substitute(x=L)
 alpha = (b2-b1)/L
 gamma = b1/alpha
except:
 sagetex.goboom(_sage_const_92 )
sagetex.blockend()
try:
 sagetex.inline(_sage_const_0 , I)
except:
 sagetex.goboom(_sage_const_95 )
try:
 sagetex.inline(_sage_const_1 , b1*(_sage_const_1 -x/L) + b2*x/L )
except:
 sagetex.goboom(_sage_const_99 )
try:
 sagetex.inline(_sage_const_2 , b1-(b1-b2)/L*x)
except:
 sagetex.goboom(_sage_const_100 )
try:
 sagetex.inline(_sage_const_3 , alpha)
except:
 sagetex.goboom(_sage_const_102 )
try:
 sagetex.inline(_sage_const_4 , gamma)
except:
 sagetex.goboom(_sage_const_102 )
try:
 sagetex.inline(_sage_const_5 , bx)
except:
 sagetex.goboom(_sage_const_104 )
try:
 sagetex.inline(_sage_const_6 , Ix)
except:
 sagetex.goboom(_sage_const_107 )
try:
 sagetex.inline(_sage_const_7 , f2)
except:
 sagetex.goboom(_sage_const_116 )
try:
 sagetex.inline(_sage_const_8 , f1)
except:
 sagetex.goboom(_sage_const_119 )
try:
 sagetex.inline(_sage_const_9 , f)
except:
 sagetex.goboom(_sage_const_122 )
try:
 sagetex.inline(_sage_const_10 , cond1[_sage_const_0 ])
except:
 sagetex.goboom(_sage_const_126 )
try:
 sagetex.inline(_sage_const_11 , cond2[_sage_const_0 ])
except:
 sagetex.goboom(_sage_const_127 )
try:
 sagetex.inline(_sage_const_12 , cond3[_sage_const_0 ])
except:
 sagetex.goboom(_sage_const_128 )
try:
 sagetex.inline(_sage_const_13 , f)
except:
 sagetex.goboom(_sage_const_132 )
try:
 sagetex.inline(_sage_const_14 , fdisp)
except:
 sagetex.goboom(_sage_const_140 )
try:
 sagetex.inline(_sage_const_15 , factor(fdisp))
except:
 sagetex.goboom(_sage_const_142 )
sagetex.endofdoc()
